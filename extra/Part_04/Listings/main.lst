C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:27:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "ADC.h"
   4          
   5          sbit PWM_PIN= P2^1;
   6          unsigned int  ON_Period, OFF_Period;
   7          unsigned int DutyCycle;
   8          
   9          
  10          
  11          sbit C1=P1^3;
  12          sbit C2=P1^2;
  13          sbit C3=P1^1;
  14          sbit C4=P1^0;
  15                                                                        
  16          sbit R1=P1^7;
  17          sbit R2=P1^6;
  18          sbit R3=P1^5;
  19          sbit R4=P1^4;
  20          
  21          int Number[3];
  22          unsigned char key[3];            
  23          unsigned int k1;
  24          unsigned int num;
  25          unsigned char i ;
  26          unsigned int Ent_num;
  27          
  28          void Timer0_Intilization ()
  29          {
  30   1        TMOD =0x10;
  31   1        TH0=0xB7;
  32   1        TL0=0xFD;
  33   1        TR0=1;
  34   1        IE=0x82;
  35   1      
  36   1      }
  37          
  38          
  39          void Timer0 () interrupt 1
  40          { 
  41   1        PWM_PIN = ~PWM_PIN ;  
  42   1        if(PWM_PIN)
  43   1           {
  44   2             TH0=ON_Period >> 8;
  45   2             TL0=ON_Period;
  46   2           }
  47   1           else
  48   1           {
  49   2             TH0=OFF_Period >> 8;
  50   2             TL0=OFF_Period;
  51   2           }  
  52   1      }
  53          
  54          void Set_Duty_Cycle (float duty_cycle)
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:27:05 PAGE 2   

  55          {  
  56   1        unsigned int Period;
  57   1        Period =65535 - 0xB7FD ;
  58   1        ON_Period =((Period/100.0)*duty_cycle);
  59   1        OFF_Period = Period -ON_Period;
  60   1        ON_Period =  65535-ON_Period;
  61   1        OFF_Period=  65535-OFF_Period;
  62   1        
  63   1      
  64   1      }
  65          void Beep(unsigned int duration)
  66          {
  67   1          unsigned char i,j;
  68   1        
  69   1        //To convert passive Buzzer into Active Buzzer we Generate Crystal frequency through coding.
  70   1         for(i=0;i<duration;i++)            
  71   1        {
  72   2          R3=0;
  73   2          for(j=0;j<100;j++);
  74   2          R3=1;
  75   2          for(j=0;j<100;j++);
  76   2      
  77   2      }
  78   1      
  79   1      }
  80          char Key_Pressed ()                 //detect the pressed button 
  81          {  
  82   1             
  83   1      while(1)                             //used in order that button is pressed forever
  84   1      { 
  85   2        R1=0; R2=1; R3=1; R4=1;            //Ground Row 1,and check coloum
  86   2             if(C1==0)                                         //Ground coloum 1 ,if this button press
  87   2             {    while(C1==0)
  88   3                 { Beep(250);  return '7';}
  89   3                 
  90   3             }   //return the Value7, Delay is used for Debouning, while(C1==0) is used that button is detected onl
             -y once;
  91   2              
  92   2             if(C2==0)                                       //
  93   2             {     while(C2==0)
  94   3                   { Beep(250);return '8';}  
  95   3             }       
  96   2              
  97   2             if(C3==0)
  98   2             {   while(C3==0)
  99   3                { Beep(250);return '9';}  
 100   3             }
 101   2             
 102   2             if(C4==0)
 103   2             {   
 104   3                while(C4==0)
 105   3                { Beep(250);return '/';} 
 106   3             
 107   3             }
 108   2         
 109   2        R1=1; R2=0; R3=1; R4=1;                             //Ground Row 2,and check coloum 
 110   2             if(C1==0)                                      //Ground coloum 1 ,if this button press
 111   2             { 
 112   3                 while(C1==0)
 113   3                { Beep(250);return '4';} 
 114   3      
 115   3      
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:27:05 PAGE 3   

 116   3             }  //return the Value4, Delay is used for Debouning, while(C1==0) is used that button is detected only
             - once;
 117   2              if(C2==0)
 118   2             {  
 119   3                 while(C2==0)
 120   3                { Beep(250);return '5';} 
 121   3             }
 122   2              if(C3==0)
 123   2             {  
 124   3               while(C3==0)
 125   3                { Beep(250);return '6';} 
 126   3      
 127   3             }
 128   2              if(C4==0)
 129   2             {  while(C4==0)
 130   3                { Beep(250);return '*';}   }
 131   2             
 132   2        R1=1; R2=1; R3=0; R4=1;                               //Ground Row 3,and check coloum
 133   2             if(C1==0)
 134   2             {  
 135   3               while(C1==0)
 136   3                { Beep(250);return '1';} 
 137   3      
 138   3             } 
 139   2              if(C2==0)
 140   2             {  while(C2==0)
 141   3                { Beep(250);return '2';} 
 142   3             }
 143   2              if(C3==0)
 144   2             {  while(C3==0)
 145   3                { Beep(250);return '3';}   
 146   3             }
 147   2              if(C4==0)
 148   2             {  while(C4==0)
 149   3                { Beep(250);return '-';}   }
 150   2             
 151   2             
 152   2        R1=1; R2=1; R3=1; R4=0;                               //Ground Row 4,and check coloum
 153   2             if(C1==0)
 154   2             { 
 155   3                  Delay1(10);  // Add appropriate delay before LCD operation
 156   3      
 157   3                  lcd_command(0x01);  // Clear the LCD screen
 158   3                  Delay1(10);  // Add appropriate delay after LCD command
 159   3      
 160   3                  lcd_command(0x80);  // Set cursor to the first line
 161   3                  Delay1(10);  // Add appropriate delay after LCD command
 162   3      
 163   3                  lcd_string("Duty Cycle");  // Display your desired text
 164   3                  Delay1(10);  // Add appropriate delay after LCD data
 165   3      
 166   3                  lcd_command(0xC1);  // Set cursor to a specific position
 167   3                  Delay1(10);  // Add appropriate delay after LCD command
 168   3      
 169   3                  while (C1 == 0);
 170   3               
 171   3               
 172   3               } 
 173   2              if(C2==0)
 174   2             {  while(C2==0)
 175   3                { Beep(250);return '0';}  
 176   3             
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:27:05 PAGE 4   

 177   3             }  //return the Value 0, Delay is used for Debouning, while(C1==0) is used that button is detected on
             -ly once;
 178   2              if(C3==0)
 179   2             {  while(C3==0)
 180   3                { Beep(250);return '=';}  
 181   3             }
 182   2              if(C4==0)
 183   2             { while(C4==0)
 184   3                { Beep(250);return '+';} 
 185   3             }
 186   2         
 187   2         R4=1;
 188   2      }
 189   1      
 190   1      }
 191          int Convert_char(unsigned char value)
 192          {
 193   1              
 194   1       switch(value)                   //value pass
 195   1       {
 196   2         case '0':                     //check, if 0 then return integer 0
 197   2         { return 0; break;}
 198   2                                        //same for other cases
 199   2          case '1':
 200   2         { return 1; break;}
 201   2         
 202   2          case '2':
 203   2         { return 2; break;}
 204   2         
 205   2          case '3':
 206   2         { return 3; break;}
 207   2         
 208   2          case '4':
 209   2         { return 4; break;}
 210   2         
 211   2          case '5':
 212   2         { return 5; break;}
 213   2         
 214   2          case '6':
 215   2         { return 6; break;}
 216   2         
 217   2          case '7':
 218   2         { return 7; break;}
 219   2         
 220   2          case '8':
 221   2         { return 8; break;}
 222   2         
 223   2          case '9':
 224   2         { return 9; break;}
 225   2         
 226   2       }
 227   1      
 228   1      }
 229          
 230          void main (void)
 231          {   
 232   1          lcd_init();                        //LCD Intilization
 233   1          lcd_string("Duty Cycle");
 234   1          Timer0_Intilization ();                     //Timmer Intilization
 235   1          R3=0;                                       //Make the Buzzer Pin as Output pin
 236   1        
 237   1          while(1)
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:27:05 PAGE 5   

 238   1          {  
 239   2                Ent_num = 0;                         //Number of key press
 240   2             for(i=0;i<4;i++)
 241   2            { 
 242   3              key[i]= Key_Pressed ();                //Keypressed function to take Duty Cycle limit    
 243   3              k1=Convert_char(key[i]); 
 244   3              Number[i]=k1;
 245   3              lcd_shownum(2,1+i,Number[i],1);
 246   3              Ent_num++;
 247   3              
 248   3              if (key[i]=='+')                     //if the Button press charachter is '+' break from the for loop a
             -nd the prevouis value is duty Cycle
 249   3                { Ent_num--;   break;  }
 250   3              
 251   3            }
 252   2         
 253   2            
 254   2             if (Ent_num > 0 || Ent_num <= 3)      //Check if the Button press is between 0 to 3 then
 255   2             {                                     //Calculate Duty Cycle According to the Number of Button Press 
             -  
 256   3              if(Ent_num==1)     
 257   3                  {num=Number[0]; lcd_shownum(2,1,num,1); lcd_showstring(2,2,".00");}
 258   3               else if(Ent_num==2)
 259   3                    {num=(Number[0]*10)+Number[1]; lcd_shownum(2,1,num,2); lcd_showstring(2,3,".00");}
 260   3              else if(Ent_num==3)
 261   3                    {num=(Number[0]*100+Number[1]*10+Number[2]); lcd_shownum(2,1,num,3); lcd_showstring(2,4,".00");
             -}
 262   3             }
 263   2        
 264   2            
 265   2              if(num<=100  && num>=0 )              //Num is Duty Cycle,if it lies in Rang 0 to 100 
 266   2              {                                     //So Set The Duty Cycle
 267   3                DutyCycle = num ; 
 268   3                Set_Duty_Cycle(DutyCycle);
 269   3                Delay1(500);
 270   3              }     
 271   2              else                                 //Otherwise 
 272   2              { 
 273   3                lcd_set_cursor(2,1);
 274   3                lcd_string("Invalid Number");   // Print On LCD Invalid Number
 275   3              }
 276   2          
 277   2          }     
 278   1      }
*** WARNING C291 IN LINE 228 OF main.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    917    ----
   CONSTANT SIZE    =     30    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
