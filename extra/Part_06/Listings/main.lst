C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:31:50 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          
   3          # include <reg52.h>
   4          # include "LCD.h"
   5          # include "ADC.h"
   6          
   7          
   8          
   9          sbit PWM_PIN= P2^1;
  10          unsigned int  ON_Period, OFF_Period;
  11          unsigned int DutyCycle;
  12          
  13          sbit C1=P1^3;
  14          sbit C2=P1^2;
  15          sbit C3=P1^1;
  16          sbit C4=P1^0;
  17                                                                        
  18          sbit R1=P1^7;
  19          sbit R2=P1^6;
  20          sbit R3=P1^5;
  21          sbit R4=P1^4;
  22               
  23          
  24          //PWM SETUP
  25          void Timer0_Intilization ()
  26          {
  27   1        TMOD =0x02;
  28   1        TH0=0x17;
  29   1        TR0=1;
  30   1        IE=0x82;
  31   1      
  32   1      }
  33          
  34          void Timer0 () interrupt 1
  35          { 
  36   1        PWM_PIN = ~PWM_PIN ;  
  37   1        if(PWM_PIN)
  38   1           {
  39   2            TH0=ON_Period >> 8;
  40   2             TL0=ON_Period;
  41   2           }
  42   1           else
  43   1           {
  44   2             TH0=OFF_Period >> 8;
  45   2             TL0=OFF_Period;
  46   2           }  
  47   1      }
  48          
  49          
  50          
  51          void Set_Duty_Cycle (float duty_cycle)
  52          {  
  53   1        unsigned int Period;
  54   1        Period =255 - 0x17 ;
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:31:50 PAGE 2   

  55   1        ON_Period =((Period/100.0)*duty_cycle);
  56   1        OFF_Period = Period -ON_Period;
  57   1        ON_Period =  255-ON_Period;
  58   1        OFF_Period=  255-OFF_Period;
  59   1        
  60   1      
  61   1      }
  62          
  63          //Buzzer
  64          
  65          //Keypad
  66          
  67          char Key_Pressed()
  68          {
  69   1          char key;
  70   1          char prev_key;
  71   1      
  72   1          while (1)
  73   1          {
  74   2              key = 0;
  75   2      
  76   2              R1 = 0; R2 = 1; R3 = 1; R4 = 1; 
  77   2              if (C1 == 0)
  78   2              {
  79   3                  key = '7';
  80   3              }
  81   2              else if (C2 == 0)
  82   2              {
  83   3                  key = '8';
  84   3              }
  85   2              else if (C3 == 0)
  86   2              {
  87   3                  key = '9';
  88   3              }
  89   2              else if (C4 == 0)
  90   2              {
  91   3                  key = '/';
  92   3              }
  93   2      
  94   2              R1 = 1; R2 = 0; R3 = 1; R4 = 1; 
  95   2              if (C1 == 0)
  96   2              {
  97   3                  key = '4';
  98   3              }
  99   2              else if (C2 == 0)
 100   2              {
 101   3                  key = '5';
 102   3              }
 103   2              else if (C3 == 0)
 104   2              {
 105   3                  key = '6';
 106   3              }
 107   2              else if (C4 == 0)
 108   2              {
 109   3                  key = '.';
 110   3              }
 111   2      
 112   2              R1 = 1; R2 = 1; R3 = 0; R4 = 1; 
 113   2              if (C1 == 0)
 114   2              {
 115   3                  key = '1';
 116   3              }
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:31:50 PAGE 3   

 117   2              else if (C2 == 0)
 118   2              {
 119   3                  key = '2';
 120   3              }
 121   2              else if (C3 == 0)
 122   2              {
 123   3                  key = '3';
 124   3              }
 125   2              else if (C4 == 0)
 126   2              {
 127   3                  key = '-';
 128   3              }
 129   2      
 130   2              R1 = 1; R2 = 1; R3 = 1; R4 = 0; 
 131   2                if(C1==0)
 132   2             { 
 133   3                  Delay(10); 
 134   3      
 135   3                  LCD_Command(0x01);  
 136   3                  Delay(10);  
 137   3      
 138   3                   LCD_Command(0x80);  
 139   3                  Delay(10); 
 140   3      
 141   3                  String_data("DutyCycle");
 142   3                  Delay(10);  
 143   3               
 144   3                  LCD_Command(0xC0);  
 145   3                  Delay(10);  
 146   3      
 147   3                  String_data("Voltage:");  
 148   3                  Delay(10);  
 149   3                  
 150   3               Delay(10000);
 151   3               
 152   3               } 
 153   2              else if (C2 == 0)
 154   2              {
 155   3                  key = '0';
 156   3              }
 157   2              else if (C3 == 0)
 158   2              {
 159   3                  key = '=';
 160   3              }
 161   2              else if (C4 == 0)
 162   2              {
 163   3                  key = '+';
 164   3              }
 165   2      
 166   2              if (key && key != prev_key)
 167   2              {
 168   3                  Delay(10000); // Debounce delay
 169   3                  while (C1 == 0 || C2 == 0 || C3 == 0 || C4 == 0)
 170   3                  {
 171   4                      //Beep(250);
 172   4                  }
 173   3      
 174   3                  prev_key = key;
 175   3                  return key;
 176   3              }
 177   2          }
 178   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:31:50 PAGE 4   

 179          
 180          //Floating point Number
 181          
 182          float GetFloatFromKeypad()
 183          {
 184   1          char input[10];
 185   1          int j,i = 0;
 186   1          int decimalEntered = 0;
 187   1          int decimalPlace = 0;
 188   1          float decimal ;
 189   1          float num ;
 190   1          int integerPart;
 191   1          int decimalPart,digit ;
 192   1          while (1)
 193   1          {
 194   2              char pressedKey = Key_Pressed(); // Function to detect the pressed button
 195   2      
 196   2              if (pressedKey == '=')
 197   2                  break;
 198   2              else if (pressedKey == '.' && i > 0 && !decimalEntered)
 199   2              {
 200   3                  input[i++] = pressedKey;
 201   3                  decimalEntered = 1;
 202   3                  LCD_ShowChar(1, 11 + i, pressedKey); // Display the decimal point on the LCD
 203   3              }
 204   2              else if (pressedKey >= '0' && pressedKey <= '9')
 205   2              {
 206   3                  if (i < 10)
 207   3                  {
 208   4                      input[i++] = pressedKey;
 209   4                      LCD_ShowChar(1, 11 + i, pressedKey); // Display the entered digit on the LCD
 210   4                  }
 211   3              }
 212   2          }
 213   1      
 214   1          input[i] = '\0';
 215   1      
 216   1          num = 0.0;
 217   1          decimal = 0.1;
 218   1      
 219   1           integerPart = 0;
 220   1           decimalPart = 0;
 221   1      
 222   1          for (j = 0; j < i; j++)
 223   1      {
 224   2          if (input[j] == '.')
 225   2          {
 226   3              decimalPlace = 1;
 227   3          }
 228   2          else
 229   2          {
 230   3              digit = input[j] - '0';
 231   3              if (!decimalPlace)
 232   3              {
 233   4                  integerPart = integerPart * 10 + digit;
 234   4              }
 235   3              else
 236   3              {
 237   4                  decimalPart = decimalPart * 10 + digit;
 238   4                  decimalPlace *= 0.1;
 239   4              }
 240   3          }
C51 COMPILER V9.60.7.0   MAIN                                                              09/19/2024 15:31:50 PAGE 5   

 241   2      }
 242   1      
 243   1          num = integerPart + decimal * decimalPart;
 244   1          return num;
 245   1      }
 246          
 247          
 248          void main(void)                  //Main Body                
 249          {   
 250   1          float num1;
 251   1          LCD_Intialization();                //LCD Intilization
 252   1          Timer0_Intilization();              // Timmer Intilization
 253   1          R3 = 0;                             //Make R3 as Output ,because Multiple time Use
 254   1          LCD_ShowString(1,0,"DutyCycle:");   
 255   1          LCD_ShowString(2,0,"Voltage:");
 256   1        
 257   1         while(1)
 258   1           {  
 259   2              num1 = GetFloatFromKeypad();       //Take the Floating Point Number from Keypad
 260   2             
 261   2              if (num1 >= 0.0 && num1 <= 5.0)     //if the Floating Point Number lies in the Range (0 to 5) so
 262   2              {  LCD_ShowFloat(num1, 1);
 263   3                  DutyCycle = num1;
 264   3                  Set_Duty_Cycle((DutyCycle * 100.0) / 5.0);  //Set duty cycle according to it
 265   3                  Delay(1000);
 266   3                  DAC_VOLTAGE ();                            //read DAC voltage
 267   3                  Delay(500);
 268   3              }
 269   2              else                                  //Otherwise
 270   2              {
 271   3                  Set_cursor(1, 0);
 272   3                  String_data("Invalid Number");     //LCD Print Invalid Number
 273   3              }
 274   2              
 275   2          }
 276   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    940    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      43
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
